[Averaging - Sample]
section = Settings
group = Averaging
label = Averaging - Sample
datatype = DOUBLE
unit = Samples
tooltip = <html><body><p>Sets the number of data samples per sweeper parameter point that is considered in the measurement.</p><p><b>AVERAGING/SAMPLE</b></p></body></html>
set_cmd = AVERAGING/SAMPLE
get_cmd = AVERAGING/SAMPLE

[Averaging - Tc]
section = Settings
group = Averaging
label = Averaging - Tc
datatype = DOUBLE
unit = TC
tooltip = <html><body><p>Sets the effective number of time constants per sweeper parameter point that is considered in the measurement.</p><p><b>AVERAGING/TC</b></p></body></html>
set_cmd = AVERAGING/TC
get_cmd = AVERAGING/TC

[Averaging - Time]
section = Settings
group = Averaging
label = Averaging - Time
datatype = DOUBLE
unit = Seconds
tooltip = <html><body><p>Sets the effective measurement time per sweeper parameter point that is considered in the measurement.</p><p><b>AVERAGING/TIME</b></p></body></html>
set_cmd = AVERAGING/TIME
get_cmd = AVERAGING/TIME

[Awgcontrol]
section = Settings
group = Awgcontrol
label = Awgcontrol
datatype = DOUBLE
tooltip = <html><body><p>Enable AWG control for sweeper. If enabled the sweeper will automatically start the AWG and records the sweep sample based on the even index in hwtrigger.</p><p><b>AWGCONTROL</b></p></body></html>
set_cmd = AWGCONTROL
get_cmd = AWGCONTROL

[Bandwidth]
section = Settings
group = Bandwidth
label = Bandwidth
datatype = DOUBLE
unit = Hz
tooltip = <html><body><p>Defines the measurement bandwidth when using Fixed bandwidth mode (sweep/bandwidthcontrol=1), and corresponds to the noise equivalent power bandwidth (NEP).</p><p><b>BANDWIDTH</b></p></body></html>
set_cmd = BANDWIDTH
get_cmd = BANDWIDTH

[Bandwidthcontrol]
section = Settings
group = Bandwidthcontrol
label = Bandwidthcontrol
datatype = COMBO
tooltip = <html><body><p>Specify how the sweeper should specify the bandwidth of each measurement point. Automatic is recommended, in particular for logarithmic sweeps and assures the whole spectrum is covered.</p><p><ul><li>manual: Manual (the sweeper module leaves the demodulator bandwidth settings entirely untouched)</li><li>fixed: Fixed (use the value from sweep/bandwidth)</li><li>auto: Automatic. Note, to use either Fixed or Manual mode, sweep/bandwidth must be set to a value > 0 (even though in manual mode it is ignored).</li></ul></p><p><b>BANDWIDTHCONTROL</b></p></body></html>
cmd_def_1 = 0
combo_def_1 = manual
cmd_def_2 = 1
combo_def_2 = fixed
cmd_def_3 = 2
combo_def_3 = auto
set_cmd = BANDWIDTHCONTROL
get_cmd = BANDWIDTHCONTROL

[Bandwidthoverlap]
section = Settings
group = Bandwidthoverlap
label = Bandwidthoverlap
datatype = DOUBLE
tooltip = <html><body><p>If enabled the bandwidth of a sweep point may overlap with the frequency of neighboring sweep points. The effective bandwidth is only limited by the maximal bandwidth setting and omega suppression. As a result, the bandwidth is independent of the number of sweep points. For frequency response analysis bandwidth overlap should be enabled to achieve maximal sweep speed.</p><p><b>BANDWIDTHOVERLAP</b></p></body></html>
set_cmd = BANDWIDTHOVERLAP
get_cmd = BANDWIDTHOVERLAP

[Clearhistory]
section = History
group = Clearhistory
label = Clearhistory
datatype = BOOLEAN
tooltip = <html><body><p>Remove all records from the history list.</p><p><b>CLEARHISTORY</b></p></body></html>
set_cmd = CLEARHISTORY
get_cmd = CLEARHISTORY

[Endless]
section = Control
group = Endless
label = Endless
datatype = BOOLEAN
tooltip = <html><body><p>Enable Endless mode: run the sweeper continuously.</p><p><b>ENDLESS</b></p></body></html>
set_cmd = ENDLESS
get_cmd = ENDLESS

[Filtermode]
section = Settings
group = Filtermode
label = Filtermode
datatype = COMBO
tooltip = <html><body><p>Selects the filter mode.</p><p><ul><li>application: Application (the sweeper sets the filters and other parameters automatically)</li><li>advanced: Advanced (the sweeper uses manually configured parameters)</li></ul></p><p><b>FILTERMODE</b></p></body></html>
cmd_def_1 = 0
combo_def_1 = application
cmd_def_2 = 1
combo_def_2 = advanced
set_cmd = FILTERMODE
get_cmd = FILTERMODE

[Gridnode]
section = Settings
group = Gridnode
label = Gridnode
datatype = STRING
unit = Node
tooltip = <html><body><p>The device parameter (specified by node) to be swept, e.g., `oscs/0/freq`.</p><p><b>GRIDNODE</b></p></body></html>
set_cmd = GRIDNODE
get_cmd = GRIDNODE

[Historylength]
section = History
group = Historylength
label = Historylength
datatype = DOUBLE
tooltip = <html><body><p>Maximum number of entries stored in the measurement history.</p><p><b>HISTORYLENGTH</b></p></body></html>
set_cmd = HISTORYLENGTH
get_cmd = HISTORYLENGTH

[Loopcount]
section = Settings
group = Loopcount
label = Loopcount
datatype = DOUBLE
tooltip = <html><body><p>The number of sweeps to perform.</p><p><b>LOOPCOUNT</b></p></body></html>
set_cmd = LOOPCOUNT
get_cmd = LOOPCOUNT

[Maxbandwidth]
section = Settings
group = Maxbandwidth
label = Maxbandwidth
datatype = DOUBLE
unit = Hz
tooltip = <html><body><p>Specifies the maximum bandwidth used when in Auto bandwidth mode (sweep/bandwidthcontrol=2). The default is 1.25 MHz.</p><p><b>MAXBANDWIDTH</b></p></body></html>
set_cmd = MAXBANDWIDTH
get_cmd = MAXBANDWIDTH

[Omegasuppression]
section = Settings
group = Omegasuppression
label = Omegasuppression
datatype = DOUBLE
unit = dB
tooltip = <html><body><p>Damping of omega and 2omega components when in Auto bandwidth mode (sweep/bandwidthcontrol=2). Default is 40dB in favor of sweep speed. Use a higher value for strong offset values or 3omega measurement methods.</p><p><b>OMEGASUPPRESSION</b></p></body></html>
set_cmd = OMEGASUPPRESSION
get_cmd = OMEGASUPPRESSION

[Order]
section = Settings
group = Order
label = Order
datatype = DOUBLE
tooltip = <html><body><p>Defines the filter roll off to use in Fixed bandwidth mode (sweep/bandwidthcontrol=1). Valid values are between 1 (6 dB/octave) and 8 (48 dB/octave).</p><p><b>ORDER</b></p></body></html>
set_cmd = ORDER
get_cmd = ORDER

[Phaseunwrap]
section = Settings
group = Phaseunwrap
label = Phaseunwrap
datatype = DOUBLE
tooltip = <html><body><p>Enable unwrapping of slowly changing phase evolutions around the +/-180 degree boundary.</p><p><b>PHASEUNWRAP</b></p></body></html>
set_cmd = PHASEUNWRAP
get_cmd = PHASEUNWRAP

[Remainingtime]
section = Control
group = Remainingtime
label = Remainingtime
datatype = DOUBLE
unit = Seconds
tooltip = <html><body><p>Reports the remaining time of the current sweep. A valid number is only displayed once the sweeper has been started. An undefined sweep time is indicated as NAN.</p><p><b>REMAININGTIME</b></p></body></html>
get_cmd = REMAININGTIME

[Samplecount]
section = Settings
group = Samplecount
label = Samplecount
datatype = DOUBLE
tooltip = <html><body><p>The number of measurement points to set the sweep on.</p><p><b>SAMPLECOUNT</b></p></body></html>
set_cmd = SAMPLECOUNT
get_cmd = SAMPLECOUNT

[Save - Csvlocale]
section = History
group = Save
label = Save - Csvlocale
datatype = STRING
tooltip = <html><body><p>The locale to use for the decimal point character and digit grouping character for numerical values in CSV files: `C`: Dot for the decimal point and no digit grouping (default): `` (empty string): Use the symbols set in the language and region settings of the computer.</p><p><b>SAVE/CSVLOCALE</b></p></body></html>
set_cmd = SAVE/CSVLOCALE
get_cmd = SAVE/CSVLOCALE

[Save - Csvseparator]
section = History
group = Save
label = Save - Csvseparator
datatype = STRING
tooltip = <html><body><p>The character to use as CSV separator when saving files in this format.</p><p><b>SAVE/CSVSEPARATOR</b></p></body></html>
set_cmd = SAVE/CSVSEPARATOR
get_cmd = SAVE/CSVSEPARATOR

[Save - Directory]
section = History
group = Save
label = Save - Directory
datatype = STRING
tooltip = <html><body><p>The base directory where files are saved.</p><p><b>SAVE/DIRECTORY</b></p></body></html>
set_cmd = SAVE/DIRECTORY
get_cmd = SAVE/DIRECTORY

[Save - Fileformat]
section = History
group = Save
label = Save - Fileformat
datatype = COMBO
tooltip = <html><body><p>The format of the file for saving data.</p><p><ul><li>mat: MATLAB</li><li>csv: CSV</li><li>zview: ZView (Impedance data only)</li><li>sxm: SXM (Image format)</li><li>hdf5: HDF5</li></ul></p><p><b>SAVE/FILEFORMAT</b></p></body></html>
cmd_def_1 = 0
combo_def_1 = mat
cmd_def_2 = 1
combo_def_2 = csv
cmd_def_3 = 2
combo_def_3 = zview
cmd_def_4 = 3
combo_def_4 = sxm
cmd_def_5 = 4
combo_def_5 = hdf5
set_cmd = SAVE/FILEFORMAT
get_cmd = SAVE/FILEFORMAT

[Save - Filename]
section = History
group = Save
label = Save - Filename
datatype = STRING
tooltip = <html><body><p>Defines the sub-directory where files are saved. The actual sub-directory has this name with a sequence count (per save) appended, e.g. daq_000.</p><p><b>SAVE/FILENAME</b></p></body></html>
set_cmd = SAVE/FILENAME
get_cmd = SAVE/FILENAME

[Save - Save]
section = History
group = Save
label = Save - Save
datatype = BOOLEAN
tooltip = <html><body><p>Initiate the saving of data to file. The saving is done in the background. When the save has finished, the module resets this parameter to 0.</p><p><b>SAVE/SAVE</b></p></body></html>
set_cmd = SAVE/SAVE
get_cmd = SAVE/SAVE

[Save - Saveonread]
section = History
group = Save
label = Save - Saveonread
datatype = BOOLEAN
tooltip = <html><body><p>Automatically save the data to file immediately before reading out the data from the module using the read() command. Set this parameter to 1 if you want to save data to file when running the module continuously and performing intermediate reads.</p><p><b>SAVE/SAVEONREAD</b></p></body></html>
set_cmd = SAVE/SAVEONREAD
get_cmd = SAVE/SAVEONREAD

[Scan]
section = Settings
group = Scan
label = Scan
datatype = COMBO
tooltip = <html><body><p>Selects the scanning type.</p><p><ul><li>sequential: Sequential (incremental scanning from start to stop value)</li><li>binary: Binary (Non-sequential sweep continues increase of resolution over entire range)</li><li>bidirectional: Bidirectional (Sequential sweep from Start to Stop value and back to Start again)</li><li>reverse: Reverse (reverse sequential scanning from stop to start value)</li></ul></p><p><b>SCAN</b></p></body></html>
cmd_def_1 = 0
combo_def_1 = sequential
cmd_def_2 = 1
combo_def_2 = binary
cmd_def_3 = 2
combo_def_3 = bidirectional
cmd_def_4 = 3
combo_def_4 = reverse
set_cmd = SCAN
get_cmd = SCAN

[Settling - Inaccuracy]
section = Settings
group = Settling
label = Settling - Inaccuracy
datatype = DOUBLE
tooltip = <html><body><p>Demodulator filter settling inaccuracy defining the wait time between a sweep parameter change and recording of the next sweep point. The settling time is calculated as the time required to attain the specified remaining proportion [1e-13, 0.1] of an incoming step function. Typical inaccuracy values: 10m for highest sweep speed for large signals, 100u for precise amplitude measurements, 100n for precise noise measurements. Depending on the order of the demodulator filter the settling inaccuracy will define the number of filter time constants the sweeper has to wait. The maximum between this value and the settling time is taken as wait time until the next sweep point is recorded. See programming manual for the relationship between sweep/settling/inaccuracy and sweep/settling/tc.</p><p><b>SETTLING/INACCURACY</b></p></body></html>
set_cmd = SETTLING/INACCURACY
get_cmd = SETTLING/INACCURACY

[Settling - Tc]
section = Settings
group = Settling
label = Settling - Tc
datatype = DOUBLE
unit = TC
tooltip = <html><body><p>Minimum wait time in factors of the time constant (TC) between setting the new sweep parameter value and the start of the measurement. This filter settling time is preferably configured via the sweep/settling/inaccuracy. The maximum between this value and sweep/settling/time is taken as effective settling time.</p><p><b>SETTLING/TC</b></p></body></html>
set_cmd = SETTLING/TC
get_cmd = SETTLING/TC

[Settling - Time]
section = Settings
group = Settling
label = Settling - Time
datatype = DOUBLE
unit = Seconds
tooltip = <html><body><p>Minimum wait time in seconds between setting the new sweep parameter value and the start of the measurement. The maximum between this value and sweep/settling/tc is taken as effective settling time.</p><p><b>SETTLING/TIME</b></p></body></html>
set_cmd = SETTLING/TIME
get_cmd = SETTLING/TIME

[Sincfilter]
section = Settings
group = Sincfilter
label = Sincfilter
datatype = DOUBLE
tooltip = <html><body><p>Enables the sinc filter if the sweep frequency is below 50 Hz. This will improve the sweep speed at low frequencies as omega components do not need to be suppressed by the normal low pass filter.</p><p><b>SINCFILTER</b></p></body></html>
set_cmd = SINCFILTER
get_cmd = SINCFILTER

[Start]
section = Settings
group = Start
label = Start
datatype = DOUBLE
tooltip = <html><body><p>The start value of the sweep parameter.</p><p><b>START</b></p></body></html>
set_cmd = START
get_cmd = START

[Stop]
section = Settings
group = Stop
label = Stop
datatype = DOUBLE
tooltip = <html><body><p>The stop value of the sweep parameter.</p><p><b>STOP</b></p></body></html>
set_cmd = STOP
get_cmd = STOP

[Xmapping]
section = Settings
group = Xmapping
label = Xmapping
datatype = COMBO
tooltip = <html><body><p>Selects the spacing of the grid used by sweep/gridnode (the sweep parameter).</p><p><ul><li>linear: Linear</li><li>log: Logarithmic distribution of sweep parameter values</li></ul></p><p><b>XMAPPING</b></p></body></html>
cmd_def_1 = 0
combo_def_1 = linear
cmd_def_2 = 1
combo_def_2 = log
set_cmd = XMAPPING
get_cmd = XMAPPING

[General settings]
name = Zurich Instruments SWEEPER_Module
version = 22.02#0.3.0#0.1
driver_path = Zurich_Instruments_SWEEPER_Module
support_arm = True
support_hardware_loop = True
interface = Other
startup = Do nothing

[Clear_Results]
label = Clear_Results
group = Clear_Results
section = Control
set_cmd = clear_results
get_cmd = clear_results
datatype = BOOLEAN

[Enable]
label = Enable
group = Enable
section = Control
set_cmd = enable
get_cmd = enable
datatype = BOOLEAN

[Result - 0]
label = Result - 0
group = Result
section = Control
set_cmd = result/0
get_cmd = result/0
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 1]
label = Result - 1
group = Result
section = Control
set_cmd = result/1
get_cmd = result/1
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 2]
label = Result - 2
group = Result
section = Control
set_cmd = result/2
get_cmd = result/2
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 3]
label = Result - 3
group = Result
section = Control
set_cmd = result/3
get_cmd = result/3
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 4]
label = Result - 4
group = Result
section = Control
set_cmd = result/4
get_cmd = result/4
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 5]
label = Result - 5
group = Result
section = Control
set_cmd = result/5
get_cmd = result/5
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 6]
label = Result - 6
group = Result
section = Control
set_cmd = result/6
get_cmd = result/6
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 7]
label = Result - 7
group = Result
section = Control
set_cmd = result/7
get_cmd = result/7
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 8]
label = Result - 8
group = Result
section = Control
set_cmd = result/8
get_cmd = result/8
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 9]
label = Result - 9
group = Result
section = Control
set_cmd = result/9
get_cmd = result/9
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 10]
label = Result - 10
group = Result
section = Control
set_cmd = result/10
get_cmd = result/10
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 11]
label = Result - 11
group = Result
section = Control
set_cmd = result/11
get_cmd = result/11
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 12]
label = Result - 12
group = Result
section = Control
set_cmd = result/12
get_cmd = result/12
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 13]
label = Result - 13
group = Result
section = Control
set_cmd = result/13
get_cmd = result/13
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 14]
label = Result - 14
group = Result
section = Control
set_cmd = result/14
get_cmd = result/14
datatype = VECTOR
x_name = Length
x_unit = Sample

[Result - 15]
label = Result - 15
group = Result
section = Control
set_cmd = result/15
get_cmd = result/15
datatype = VECTOR
x_name = Length
x_unit = Sample

[Signal - 0]
label = Signal - 0
group = Signal
section = Control
set_cmd = signal/0
get_cmd = signal/0
datatype = STRING

[Signal - 1]
label = Signal - 1
group = Signal
section = Control
set_cmd = signal/1
get_cmd = signal/1
datatype = STRING

[Signal - 2]
label = Signal - 2
group = Signal
section = Control
set_cmd = signal/2
get_cmd = signal/2
datatype = STRING

[Signal - 3]
label = Signal - 3
group = Signal
section = Control
set_cmd = signal/3
get_cmd = signal/3
datatype = STRING

[Signal - 4]
label = Signal - 4
group = Signal
section = Control
set_cmd = signal/4
get_cmd = signal/4
datatype = STRING

[Signal - 5]
label = Signal - 5
group = Signal
section = Control
set_cmd = signal/5
get_cmd = signal/5
datatype = STRING

[Signal - 6]
label = Signal - 6
group = Signal
section = Control
set_cmd = signal/6
get_cmd = signal/6
datatype = STRING

[Signal - 7]
label = Signal - 7
group = Signal
section = Control
set_cmd = signal/7
get_cmd = signal/7
datatype = STRING

[Signal - 8]
label = Signal - 8
group = Signal
section = Control
set_cmd = signal/8
get_cmd = signal/8
datatype = STRING

[Signal - 9]
label = Signal - 9
group = Signal
section = Control
set_cmd = signal/9
get_cmd = signal/9
datatype = STRING

[Signal - 10]
label = Signal - 10
group = Signal
section = Control
set_cmd = signal/10
get_cmd = signal/10
datatype = STRING

[Signal - 11]
label = Signal - 11
group = Signal
section = Control
set_cmd = signal/11
get_cmd = signal/11
datatype = STRING

[Signal - 12]
label = Signal - 12
group = Signal
section = Control
set_cmd = signal/12
get_cmd = signal/12
datatype = STRING

[Signal - 13]
label = Signal - 13
group = Signal
section = Control
set_cmd = signal/13
get_cmd = signal/13
datatype = STRING

[Signal - 14]
label = Signal - 14
group = Signal
section = Control
set_cmd = signal/14
get_cmd = signal/14
datatype = STRING

[Signal - 15]
label = Signal - 15
group = Signal
section = Control
set_cmd = signal/15
get_cmd = signal/15
datatype = STRING

